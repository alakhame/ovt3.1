ovt_front_end_client_homepage:
    path:     /
    defaults: { _controller: OVTFrontEndClientBundle:Client:index }

ovt_front_end_client_profile:
    path:     /profile/view
    defaults: { _controller: OVTFrontEndClientBundle:Client:profileView }

ovt_front_end_client_session_new:
    path:     /new/session
    defaults: { _controller: OVTFrontEndClientBundle:Client:addSession }
    options:
        expose: true
    requirements:
        _method: POST

ovt_front_end_client_document:
    path:     /document
    defaults: { _controller: OVTFrontEndClientBundle:Client:documentView }

ovt_front_end_admin_client_get_pdf_document_by_id:
    path: /document/getpdf/{idSession}
    defaults: { _controller: OVTFrontEndClientBundle:Client:getPDFBySessionId}
    options:
        expose: true

ovt_front_end_client_calendar:
    path:     /calendar/{idClient}
    defaults: { _controller: OVTFrontEndClientBundle:Client:calendarView, idClient:-1, coreCalendar:-1 }
    options:
        expose: true

ovt_front_end_client_authorized_services:
    path:     /getAllowedServices/{orgID}
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:authorizedServices, orgID:-1 }
    options:
        expose: true

ovt_front_end_client_retrieve_client_sessions:
    path: /myreservations/{idClient}
    defaults: { _controller: OVTFrontEndClientBundle:Client:retrieveClientSessions}
    options:
        expose: true
    requirements:
        _method: GET

ovt_front_end_client_retrieve_client_sessions_by_user_id:
    path: /myreservations/byuser/{idUser}
    defaults: { _controller: OVTFrontEndClientBundle:Client:retrieveClientSessionsByUserId}
    options:
        expose: true
    requirements:
        _method: GET

ovt_front_end_client_list_sessions:
    path:     /listsessions
    defaults: { _controller: OVTFrontEndClientBundle:Client:listSessions }
    options:
        expose: true 

ovt_front_end_client_get_orgs_by_service:
    path:     /getOrgByService/{serviceId}
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:getOrgByService, serviceId:-1 }
    options:
        expose: true




ovt_front_end_admin_client_homepage:
    path:     /adminclient
    defaults: { _controller: OVTFrontEndClientBundle:Client:index }

ovt_front_end_admin_client_get_session_by_id:
    path: /adminclient/session/{id}
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:getSessionById}
    options:
        expose: true

ovt_front_end_admin_client_action_session:
    path: /{action}/session
    defaults: { _controller:  OVTFrontEndClientBundle:ClientAdmin:updateStateSession}
    options:
        expose: true
    requirements:
        _method: POST

ovt_front_end_admin_client_users:
    path:     /adminclient/users
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:users }
    options:
        expose: true

ovt_front_end_admin_client_get_user_by_id:
    path: /adminclient/user/{id}
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:getClientById}
    options:
        expose: true

ovt_front_end_admin_client_get_json_groups_by_admin:
    path: /adminclient/groups/json
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:renderJSONClientServiceGroups }
    options:
        expose: true

ovt_front_end_admin_client_delete_user_by_id:
    path: /delete/user
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:deleteUserById}
    options:
        expose: true
    requirements:
        _method: POST

ovt_front_end_admin_client_set_user_group:
    path: /setgroup/user
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:setGroupUser}
    options:
        expose: true
    requirements:
        _method: POST

ovt_front_end_admin_client_update_user:
    path: /update/user
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:updateClient}
    options:
        expose: true
    requirements:
        _method: POST

ovt_front_end_admin_client_new_user:
    path: /adminclient/new/user
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:addNewClient }
    options:
        expose: true
    requirements:
        _method: POST

ovt_front_end_admin_client_group:
    path:     /adminclient/group
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:group }
    options:
        expose: true


ovt_front_end_admin_client_get_group_by_id:
    path: /adminclient/group/{id}
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:getGroupById }
    options:
        expose: true
    requirements:
        id : \d+

ovt_front_end_admin_client_delete_group_by_id:
    path: /adminclient/delete/group
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:deleteGroupById}
    options:
        expose: true
    requirements:
        _method: POST

ovt_front_end_admin_client_update_group:
    path: /adminclient/update/group
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:updateGroup}
    options:
        expose: true
    requirements:
        _method: POST


ovt_front_end_admin_client_new_group:
    path: /adminclient/new/group
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:addNewGroup }
    options:
        expose: true
    requirements:
        _method:  POST

ovt_front_end_admin_client_manage_org_group:
    path: /adminclient/group/manageOrg/{id}
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:manageOrgGroup, id:-1 }
    options:
        expose: true
    requirements:
        id : \d+

ovt_front_end_admin_client_services_choice:
    path: /adminclient/services/choice/{idClient}
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:servicesChoice}
    options:
        expose: true
    requirements:
        _method: GET

ovt_front_end_admin_client_service_toggle:
    path: /adminclient/services/choice/{idClient}/{idService}
    defaults: { _controller: OVTFrontEndClientBundle:ClientAdmin:serviceToggle}
    options:
        expose: true
    requirements:
        _method: GET



ovt_front_end_admin_client_test:
    path:   /test
    defaults: {_controller: OVTFrontEndClientBundle:ClientAdmin:test}