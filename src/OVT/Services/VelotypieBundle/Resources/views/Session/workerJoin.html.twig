<!doctype html>
<html>
    <head>
        <title>Session</title> 
        <link rel="stylesheet" type="text/css" href="{{asset('ress/css/transcript.css')}}" />
        <link rel="stylesheet" href="{{asset('ress/css/bootstrap.css')}}" /> 
        <script src="{{asset('ress/js/angular.js')}}" > </script>
        <script src="{{asset('ress/js/jquery.js')}}" > </script>
        <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
        <script src="{{ path('fos_js_routing_js', {"callback": "fos.Router.setData"}) }}"></script>
    </head>
    <body>
        <div id="wrapper" ng-app="OVTApp" ng-controller="velotypieWorkerCtrl" data-ng-init="init()" >
            <div id="incomingText"  >
                <div class="topDiv">
                    Transcription  
                </div>
                <div id="styleMenu">
                    <div class="styleMenuDiv" id ="wideScreen" > 
                        <img src="{{asset('ress/img/full_screen.png')}}" height="42px" width="42px" /> 
                    </div>
                    <div class="styleMenuDiv">
                        <select id="fontFamily">    
                            <option selected="selected" disabled>--- Font Family Selector ---</option>
                            <option>Arial</option>
                            <option>Tahoma</option>
                            <option>Times New Roman</option>
                            <option>Verdana</option>
                        </select>
                    </div>
                    <div class="styleMenuDiv">
                        <select id="police">
                            <option selected="selected" disabled>--- Font Size Setter ---</option>
                            <option value="12px"> 12px </option>
                            <option value="14px">14px</option>
                            <option value="16px">16px</option>
                            <option value="18px">18px</option>
                            <option value="24px">24px</option>
                            <option value="30px">30px</option>
                        </select>
                    </div>
                    <div class="styleMenuDiv" id ="fontColor" >
                        <img  class="styleMenuImage" src="{{asset('ress/img/font-color.png')}}" />
                        <div class="colorBar"></div>
                    </div>
                    <div class="styleMenuDiv" id="backColor" >
                        <img class="styleMenuImage"src="{{asset('ress/img/bgcolor.png')}}" /> 
                        <div class="colorBar"></div>
                    </div>
                    <div class="styleMenuDiv" id="hideSideBar">
                        <img  height="35px" width="35px" src="{{asset('ress/img/chat.png')}}" />
                    </div>
                    <div class="styleMenuDiv" id="quitButton" style="padding:5px 0px 0px 5px;">
                        <img src="{{asset('ress/img/exit.png')}}" style=" float:left;"/> 
                        <span style="color:white">Fermer</span>
                    </div>

                </div>
                <div id="ttarea">
                    <textarea ng-bind="textareaField" > </textarea>
                </div>
            </div>

            <div id ="infoSession">
                <div class="topDiv">
                    Details de la Session
                </div> 
                <div class="detailsSession" style="overflow: scroll;"> 
                    <table id="newtable" class="table table-bordered table-striped  "> 
                        <tbody>
                            <tr>
                                <td colspan="0"> 
                                    <div  >
                                        Connecté en tant que :
                                    </div>                                     
                                </td>
                            </tr>
                            <tr>
                                <td colspan="0"> 
                                    <div  >
                                        {{user.firstName ~" "~user.lastName}}
                                    </div>                                     
                                </td>
                            </tr>
                            <tr>
                                <td colspan="0"> 
                                    <div  >
                                        Intitulé :
                                    </div>                                     
                                </td>
                            </tr>
                            <tr>
                                <td colspan="0"> 
                                    <div  >
                                        {{session.title}}
                                    </div>                                     
                                </td>
                            </tr>
                            <tr>
                                <td colspan="0"> 
                                    <div  >
                                        Organisateur :
                                    </div>                                     
                                </td>
                            </tr>
                            <tr>
                                <td colspan="0"> 
                                    <div  >
                                        {{session.client.user.firstName ~" "~session.client.user.lastName}}
                                    </div>                                     
                                </td>
                            </tr>
                             <tr>
                                <td colspan="0"> 
                                    <div  >
                                        Transcripteur :
                                    </div>                                     
                                </td>
                            </tr>
                            <tr>
                                <td colspan="0"> 
                                    <div  >
                                        {{session.worker.user.firstName ~" "~session.worker.user.lastName}}
                                    </div>                                     
                                </td>
                            </tr>
                             <tr>
                                <td colspan="0"> 
                                    <div  >
                                        Heure de début :
                                    </div>                                     
                                </td>
                            </tr>
                            <tr>
                                <td colspan="0"> 
                                    <div  >
                                        {{session.starttime|date('Y-m-d H:i:s') }}
                                    </div>                                     
                                </td>
                            </tr>
                            <tr>
                                <td colspan="0"> 
                                    <div  >
                                        Heure de fin :
                                    </div>                                     
                                </td>
                            </tr>
                            <tr>
                                <td colspan="0"> 
                                    <div  >
                                        {{session.endtime|date('Y-m-d H:i:s') }}
                                    </div>                                     
                                </td>
                            </tr>
                            <tr>
                                <td colspan="0"> 
                                    <div  >
                                        Détails supplémentaires :
                                    </div>                                     
                                </td>
                            </tr>
                            <tr>
                                <td colspan="0"> 
                                    <textarea >
                                        {{session.description }}
                                    </textarea>                                     
                                </td>
                            </tr>
                        </tbody>    
                    </table>            
                    
                </div>
            </div>

            <div id="chatBox" >
                <div class="topDiv">
                    Messagerie instannée
                </div>
                <div id="msgBox"></div>
                <div id="inputMsg">
                    <input type="text" id="chatField" class="col-md-9"></input>
                    <input type="submit" id="chatSender" class="col-md-3"value="Envoyer"></input>
                </div>
            </div>
        </div>

        <script src="{{asset('ress/js/socket.io-1.2.0.js')}}"></script>
        <script src="{{asset('ress/js/keycodes.js')}}"></script>

        <script type="text/javascript" src="{{asset('ress/js/jquery.caret.js')}}"></script>
        <script type="text/javascript" src="{{asset('ress/js/jquery.selection.js')}}"></script>
        <script type="text/javascript" src="{{asset('ress/js/socket.js')}}"></script>

        <script type="text/javascript"   >   
          
 

            var app = angular.module('OVTApp', ['btford.socket-io']);
            
            app.factory('workerSocket', function (socketFactory) {
               return socketFactory({ 
                    ioSocket: io.connect('localhost:9090',{'sync disconnect on unload': true })
                  });
            }).
            controller('velotypieWorkerCtrl', function(workerSocket,$scope,$http,$location,$window) {
                

                function sendChatMessage(data){
                    $('#msgBox').append('<div  > <span class="spanBlue">Moi:  </span>'+decodeURIComponent(data.content)+'</div>');
                    workerSocket.emit('newChatMessage',data);
                    $('#chatField').val("");
                }

                function initChatBox (){
                    var link = Routing.generate('ovt_services_velotypie_API_get_chat_by_session_id',{sessionID:{{session.id}}});
                    var chatMessages; 
                    $http.get(link).
                    success(function(data, status, headers, config) {
                        chatMessages = data;
                        for(var i = 0; i<chatMessages.length; i++ ){
                        if(chatMessages[i].sender=={{session.worker.user.id}}){
                            $('#msgBox').append('<div  > <span class="spanBlue">Moi :  </span>'+decodeURIComponent(chatMessages[i].content)+'</div>');
                        }
                        else{
                            $('#msgBox').append('<div> <span class="spanRed">Client :  </span>'+decodeURIComponent(chatMessages[i].content)+'</div>');
                        }
                    }
                    }).
                    error(function(data, status, headers, config) { }); 
                }            

                function init(){  
                    $('#ttarea').css("border"," 5px inset red");
                    inactivity = 0; 
                    wordBuffer='';
                    saloon= "{{link}}"; 
                    var link = Routing.generate('ovt_services_velotypie_API_get_content_by_id',{sessionID:{{session.id}}});
                    $http.get(link).
                    success(function(data, status, headers, config) {
                         $scope.textareaField = data;

                    }).
                    error(function(data, status, headers, config) { });
                   
                    initChatBox ();
                }
            
                init();
                
                //////////// authentification handler /////////////////
                workerSocket.on("connect", function(){
                    var dataConnect={userID:"{{user.id}}",saloon:saloon};
                    workerSocket.emit('workerJoin',dataConnect);
                    //$('#ttarea').css("border"," 5px inset green");
                    workerSocket.emit('workerPresence',dataConnect);
                });
                
                workerSocket.on("accessGranted", function(id){
                    // alert('le serveur a accepté la connextion pour '+id);
                });

                workerSocket.on("accessDenied", function(id){
                     alert('l\'access a été refusée par le serveur pour '+id);
                });

                workerSocket.on('clientConnected', function(data){
                    $('#ttarea').css("border"," 5px inset green");
                    var dataConnect={userID:"{{user.id}}",saloon:saloon};
                    workerSocket.emit('workerPresenceACK',dataConnect);
                });

                workerSocket.on('clientConnectedACK', function(data){
                    $('#ttarea').css("border"," 5px inset green"); 
                });

                workerSocket.on('clientDisconnected', function(data){
                    $('#ttarea').css("border"," 5px inset red");
                }); 

                ////// CHAT HANDLER ///////////
                workerSocket.on('newChatMessage', function(data){
                    $('#msgBox').append('<div> <span class="spanRed">Client :  </span>'+decodeURIComponent(data.content)+'</div>');
                });


                ////// Handling events  ///////
                $("#ttarea textarea" ).bind("keypress",function(e) {
                    var selectionLength=$('#ttarea textarea').selection().length;
                    if(selectionLength>1){
                        data={'session':{{session.id}}, saloon:saloon, position :$('#ttarea textarea').caret(), nbChars:selectionLength};
                        workerSocket.emit('deletingString', data); 
                    }
                            
                    var key=e.keyCode;
                    var pos =$('#ttarea textarea').caret();
                    var data={'session':{{session.id}}, saloon:saloon , textString:encodeURIComponent(String.fromCodePoint(e.which)), character:String.fromCodePoint(e.which), position :pos};
                    workerSocket.emit('sendingString', data);
                    inactivity = 0;
                   
                });

                $("#ttarea textarea" ).bind("keydown",function(e) {
                    var key=e.keyCode;
                    var pos =$('#ttarea textarea').caret();
                    var data={'session':{{session.id}}, saloon:saloon , character:String.fromCodePoint(e.which), position :pos, nbChars:0};
                    var selectionLength=$('#ttarea textarea').selection().length;
                    switch(key){
                        case KeyCode.BACKSPACE :
                            if(selectionLength>0){
                                alert(selectionLength);
                                data={'session':{{session.id}}, saloon:saloon, position :pos, nbChars:selectionLength};
                                workerSocket.emit('deletingString', data);
                            }else{
                                data.nbChars=1;
                                data.position=data.position-1;
                                workerSocket.emit('deletingString', data);
                            }
                            break;
                        case KeyCode.DEL:
                            if(selectionLength>0){
                                alert(selectionLength);
                                data={'session':{{session.id}}, saloon:saloon, position :pos, nbChars:selectionLength};
                                workerSocket.emit('deletingString', data);
                            }else{
                                data.nbChars=1;
                                workerSocket.emit('deletingString', data);
                            }
                            break;
                    }
                    inactivity = 0;
                
                }); 

                $( "#ttarea textarea" ).bind("cut",function(e) {
                    var selectionLength=$('#ttarea textarea').selection().length;
                    if(selectionLength>0){
                        //alert(selectionLength);
                        data={'session':{{session.id}}, saloon:saloon, position :$('#ttarea textarea').caret(), nbChars:selectionLength};
                        workerSocket.emit('deletingString', data);
                    }
                    inactivity = 0;
                });

                $( "#ttarea textarea" ).bind("paste",function(e) {
                    //console.debug(e);
                    var text =e.originalEvent.clipboardData.getData('text/plain');
                    //alert(text);
                    
                    data={'session':{{session.id}}, saloon:saloon, position :$('#ttarea textarea').caret(), textString:text};
                    workerSocket.emit('sendingString', data);
                    inactivity = 0;
                });




                $('#chatSender').click(function(){
                    data={
                        saloon : "{{link}}",
                        session:{{session.id}},
                        sender : {{session.worker.user.id }},
                        receiver : {{session.client.user.id}},
                        content: encodeURIComponent($('#chatField').val()) 
                    };
                    sendChatMessage(data);
                });
                $('#chatField').bind("keydown", function(e){
                    if(e.keyCode==KeyCode.RETURN){
                        data={
                            saloon : "{{link}}",
                            session:{{session.id}},
                            sender : {{session.worker.user.id }},
                            receiver : {{session.client.user.id}},
                            content: encodeURIComponent($('#chatField').val()) 
                        };
                        sendChatMessage(data);
                    }
                });


                var heartBeat = function() {
                    var presenceData={saloon:saloon};
                     
                    workerSocket.emit('presenceFrame',presenceData);
                }
                //heartBeat(); 
                //var timer = setInterval(heartBeat   ,10000);


                var updateDBContent = setInterval(function(){
                        var content = $("#ttarea textarea").val() ;
                        var link2 = Routing.generate('ovt_services_velotypie_API_add_content_by_id_bis',
                        { sessionID:{{session.id}}, content: content});
                        if(inactivity++ < 2)
                            $.get(link2, function(data, status){
                                console.log("updating db --- ");
                            });

                    },5000);

                });




            









            ////////////////////////////////////
 
        </script>
        
        <!--- ****************************** SEPARATOR *************************  -->
        
        <script type="text/javascript">
            
            // font family picker     
            $('#fontFamily').change(function() {
                $('#ttarea textarea').css('font-family',$(this).val());
            }); 

            // font size setter     
            $('#police').change(function() { 
                $('#ttarea textarea').css('font-size',$(this).val());
            }); 


        </script>



    </body>
</html>
