<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_general_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'OVT\\GeneralBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_services_join' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\GeneralBundle\\Controller\\DefaultController::sessionJoinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/session/join',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_test_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\TestBundle\\Controller\\DefaultController::interfaceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/test/interface',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_test_view' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\TestBundle\\Controller\\DefaultController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/test/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_test' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OVT\\TestBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/test',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_stats_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\StatsBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_servicesvoice_recognition_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'OVT\\Services\\voiceRecognitionBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_services_post_sync_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'OVT\\Services\\PostSyncBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_services_velotypie_join' => array (  0 =>   array (    0 => 'userType',    1 => 'hashLink',  ),  1 =>   array (    '_controller' => 'OVT\\Services\\VelotypieBundle\\Controller\\SessionController::joinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hashLink',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userType',    ),    2 =>     array (      0 => 'text',      1 => '/velotypie/session/participate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_services_velotypie_API_add_content_by_id' => array (  0 =>   array (    0 => 'sessionID',  ),  1 =>   array (    '_controller' => 'OVT\\Services\\VelotypieBundle\\Controller\\ContentAPIController::addStringAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionID',    ),    1 =>     array (      0 => 'text',      1 => '/API/session/addString',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_services_velotypie_API_add_content_by_id_bis' => array (  0 =>   array (    0 => 'sessionID',  ),  1 =>   array (    '_controller' => 'OVT\\Services\\VelotypieBundle\\Controller\\ContentAPIController::addStringBisAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionID',    ),    1 =>     array (      0 => 'text',      1 => '/API/session/addStringBis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_services_velotypie_API_get_content_by_id' => array (  0 =>   array (    0 => 'sessionID',  ),  1 =>   array (    '_controller' => 'OVT\\Services\\VelotypieBundle\\Controller\\ContentAPIController::getAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionID',    ),    1 =>     array (      0 => 'text',      1 => '/API/session/get',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_services_velotypie_API_add_chat_message' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\Services\\VelotypieBundle\\Controller\\ChatBoxController::addnewMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/API/chatmessage/add/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_services_velotypie_API_session_authentification' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\Services\\VelotypieBundle\\Controller\\SessionController::authAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/API/sessionAuth',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_services_velotypie_API_get_chat_by_session_id' => array (  0 =>   array (    0 => 'sessionID',  ),  1 =>   array (    '_controller' => 'OVT\\Services\\VelotypieBundle\\Controller\\ChatBoxController::getChatBySessionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionID',    ),    1 =>     array (      0 => 'text',      1 => '/API/chatmessage/get',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_services_lfs_join' => array (  0 =>   array (    0 => 'userType',    1 => 'hashLink',  ),  1 =>   array (    '_controller' => 'OVT\\Services\\LFSBundle\\Controller\\SessionController::joinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hashLink',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userType',    ),    2 =>     array (      0 => 'text',      1 => '/lfs/session/participate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovtapi_web_rtc_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'OVT\\API\\WebRTCBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_provider_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_provider_my_sessions' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderController::mySessionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/mysessions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_provider_calendar' => array (  0 =>   array (    0 => 'idWorker',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderController::calendarViewAction',    'idWorker' => -1,    'coreCalendar' => -1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idWorker',    ),    1 =>     array (      0 => 'text',      1 => '/provider/calendar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_provider_archives' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderController::archivesViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/archives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_provider_retrieve_affected_sessions_to_worker' => array (  0 =>   array (    0 => 'idWorker',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderController::retrieveAffectedSessionsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idWorker',    ),    1 =>     array (      0 => 'text',      1 => '/provider/myaffectedsessions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_provider_retrieve_affected_sessions_to_worker_by_user' => array (  0 =>   array (    0 => 'idUser',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderController::retrieveAffectedSessionsByUserAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idUser',    ),    1 =>     array (      0 => 'text',      1 => '/provider/affectedsessions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_provider_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderController::profileViewAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/profile/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_set_sessions' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::setSessionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/setsession',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_worker' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::workerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/worker',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_group' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::groupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_new_worker' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::addNewWorkerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/new/worker',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_new_group' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::addNewGroupAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/new/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_get_json_groups_by_admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::renderJSONProviderGroupsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/groups/json',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_get_services_json' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::getAllServicesJSONAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/services/json',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_get_group_by_id' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::getGroupByIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/provider/adminprovider/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_get_session_by_id' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::getSessionByIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/provider/adminprovider/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_get_worker_by_id' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::getWorkerByIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/provider/adminprovider/worker',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_delete_worker_by_id' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::deleteWorkerByIdAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/delete/worker',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_delete_group_by_id' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::deleteGroupByIdAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/delete/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_set_worker_group' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::setGroupWorkerAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/setgroup/worker',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_set_worker_to_session' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::affectWorkerToSessionAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/affect/worker/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_update_session' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::updateSessionAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/update/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_update_group' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::updateGroupAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/update/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_update_worker' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::updateWorkerAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/adminprovider/update/worker',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_action_session' => array (  0 =>   array (    0 => 'action',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::updateStateSessionAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/session',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'action',    ),    2 =>     array (      0 => 'text',      1 => '/provider/adminprovider',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_provider_worker_calendar' => array (  0 =>   array (    0 => 'idWorker',    1 => 'coreCalendar',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderController::calendarViewAction',    'idWorker' => -1,    'coreCalendar' => -1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'coreCalendar',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idWorker',    ),    2 =>     array (      0 => 'text',      1 => '/provider/adminprovider/calendar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_provider_admin_retrieve_affected_sessions_to_worker' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderAdminController::workerAffectedSessionsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/provider/adminprovider/worker/affectedSessions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'test' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderController::testAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/testpro',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'testFeed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ProviderBundle\\Controller\\ProviderController::JSONFeedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provider/test/feed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_client_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_client_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientController::profileViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/profile/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_client_session_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientController::addSessionAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/new/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_client_document' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientController::documentViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/document',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_get_pdf_document_by_id' => array (  0 =>   array (    0 => 'idSession',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientController::getPDFBySessionIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idSession',    ),    1 =>     array (      0 => 'text',      1 => '/client/document/getpdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_client_calendar' => array (  0 =>   array (    0 => 'idClient',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientController::calendarViewAction',    'idClient' => -1,    'coreCalendar' => -1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idClient',    ),    1 =>     array (      0 => 'text',      1 => '/client/calendar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_client_authorized_services' => array (  0 =>   array (    0 => 'orgID',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::authorizedServicesAction',    'orgID' => -1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orgID',    ),    1 =>     array (      0 => 'text',      1 => '/client/getAllowedServices',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_client_retrieve_client_sessions' => array (  0 =>   array (    0 => 'idClient',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientController::retrieveClientSessionsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idClient',    ),    1 =>     array (      0 => 'text',      1 => '/client/myreservations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_client_retrieve_client_sessions_by_user_id' => array (  0 =>   array (    0 => 'idUser',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientController::retrieveClientSessionsByUserIdAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idUser',    ),    1 =>     array (      0 => 'text',      1 => '/client/myreservations/byuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_client_list_sessions' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientController::listSessionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/listsessions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_client_get_orgs_by_service' => array (  0 =>   array (    0 => 'serviceId',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::getOrgByServiceAction',    'serviceId' => -1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'serviceId',    ),    1 =>     array (      0 => 'text',      1 => '/client/getOrgByService',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/adminclient',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_get_session_by_id' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::getSessionByIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/client/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_action_session' => array (  0 =>   array (    0 => 'action',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::updateStateSessionAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/session',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'action',    ),    2 =>     array (      0 => 'text',      1 => '/client',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::usersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/adminclient/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_get_user_by_id' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::getClientByIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/client/adminclient/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_get_json_groups_by_admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::renderJSONClientServiceGroupsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/adminclient/groups/json',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_delete_user_by_id' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::deleteUserByIdAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/delete/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_set_user_group' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::setGroupUserAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/setgroup/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_update_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::updateClientAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/update/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_new_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::addNewClientAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/adminclient/new/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_group' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::groupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/adminclient/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_get_group_by_id' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::getGroupByIdAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/client/adminclient/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_delete_group_by_id' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::deleteGroupByIdAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/adminclient/delete/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_update_group' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::updateGroupAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/adminclient/update/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_new_group' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::addNewGroupAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/adminclient/new/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_manage_org_group' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::manageOrgGroupAction',    'id' => -1,  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/client/adminclient/group/manageOrg',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_services_choice' => array (  0 =>   array (    0 => 'idClient',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::servicesChoiceAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idClient',    ),    1 =>     array (      0 => 'text',      1 => '/client/adminclient/services/choice',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_service_toggle' => array (  0 =>   array (    0 => 'idClient',    1 => 'idService',  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::serviceToggleAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idService',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idClient',    ),    2 =>     array (      0 => 'text',      1 => '/client/adminclient/services/choice',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_front_end_admin_client_test' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\FrontEnd\\ClientBundle\\Controller\\ClientAdminController::testAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/test',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_accounting_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AccountingBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\SuperAdminController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superadmin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_gestion' => array (  0 =>   array (    0 => 'gestion',  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\SuperAdminController::gestionAction',    'gestion' => 'user',  ),  2 =>   array (    'gestion' => 'adminClient|adminProvider|client|provider|service',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => 'adminClient|adminProvider|client|provider|service',      3 => 'gestion',    ),    1 =>     array (      0 => 'text',      1 => '/superadmin/gestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_gestion_new' => array (  0 =>   array (    0 => 'gestion',  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\SuperAdminController::addNewAction',    'gestion' => 'user',  ),  2 =>   array (    'gestion' => 'adminClient|adminProvider|client|provider|service',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addnew',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'adminClient|adminProvider|client|provider|service',      3 => 'gestion',    ),    2 =>     array (      0 => 'text',      1 => '/superadmin/gestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_gestion_new_service' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\ServiceAdminController::addNewAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superadmin/gestion/service/addnew',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_gestion_get_service_by_id' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\ServiceAdminController::getServiceByIdAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superadmin/gestion/service',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_gestion_get_organisation_by_id' => array (  0 =>   array (    0 => 'organisation',    1 => 'id',  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\OrganisationAdminController::getOrgByIdAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'organisation',    ),    2 =>     array (      0 => 'text',      1 => '/superadmin/gestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_gestion_new_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\UserAdminController::addNewAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superadmin/gestion/user/addnew',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_gestion_new_organisation' => array (  0 =>   array (    0 => 'organisation',  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\OrganisationAdminController::addNewOrgAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addnew',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'organisation',    ),    2 =>     array (      0 => 'text',      1 => '/superadmin/gestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_gestion_organisation_setadmin' => array (  0 =>   array (    0 => 'org',  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\OrganisationAdminController::setAdminAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/setadmin',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'org',    ),    2 =>     array (      0 => 'text',      1 => '/superadmin/gestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_gestion_organisation_update' => array (  0 =>   array (    0 => 'org',    1 => 'idOrg',  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\OrganisationAdminController::updateAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idOrg',    ),    1 =>     array (      0 => 'text',      1 => '/update',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'org',    ),    3 =>     array (      0 => 'text',      1 => '/superadmin/gestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_gestion_organisation_update_post' => array (  0 =>   array (    0 => 'org',  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\OrganisationAdminController::updatePostAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'org',    ),    2 =>     array (      0 => 'text',      1 => '/superadmin/gestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_gestion_organisation_deleteadmin' => array (  0 =>   array (    0 => 'org',    1 => 'idOrg',    2 => 'idAdmin',  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\OrganisationAdminController::deleteAdminAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idAdmin',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idOrg',    ),    2 =>     array (      0 => 'text',      1 => '/deleteadmin',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'org',    ),    4 =>     array (      0 => 'text',      1 => '/superadmin/gestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_gestion_organisation_delete' => array (  0 =>   array (    0 => 'org',    1 => 'idOrg',  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\OrganisationAdminController::deleteOrgAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idOrg',    ),    1 =>     array (      0 => 'text',      1 => '/delete',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'org',    ),    3 =>     array (      0 => 'text',      1 => '/superadmin/gestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_manage_service' => array (  0 =>   array (    0 => 'organisation',    1 => 'idOrg',  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\OrgServiceAdminController::manageServicesAction',  ),  2 =>   array (    'organisation' => 'client|provider',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idOrg',    ),    1 =>     array (      0 => 'text',      1 => '/manage/service',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => 'client|provider',      3 => 'organisation',    ),    3 =>     array (      0 => 'text',      1 => '/superadmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_back_end_admin_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\BackEnd\\AdminBundle\\Controller\\ProfileAdminController::viewAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superadmin/profile/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_user_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'OVTUserBundle:Default:index',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_user_profil_rediction' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\UserBundle\\Controller\\UserInfosController::profilRedirectionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profilRedirection',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_user_profil_update' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\UserBundle\\Controller\\UserInfosController::updateProfileAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ovt_user_password_update' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OVT\\UserBundle\\Controller\\UserInfosController::updatePasswordAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/password/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_js_routing_js' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fos_js_routing.controller:indexAction',    '_format' => 'js',  ),  2 =>   array (    '_format' => 'js|json',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'js|json',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/js/routing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
